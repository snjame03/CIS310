--1
SELECT ITEMID, DESCRIPTION, LISTPRICE
FROM PET..Merchandise
WHERE LISTPRICE > (SELECT AVG(LISTPRICE) FROM PET..MERCHANDISE)
ORDER BY ITEMID

--2
CREATE VIEW AVGSALEPRICE AS
SELECT ITEMID, AVG(SALEPRICE) AS 'AVERAGESALEPRICE'
FROM PET..SALEITEM
GROUP BY ITEMID

CREATE VIEW AVGCOSTPRICE AS
SELECT ITEMID, AVG(COST) AS 'AVERAGECOSTPRICE'
FROM PET..ORDERITEM
GROUP BY ITEMID

SELECT CP.[AVERAGECOSTPRICE], M.ITEMID, ASP.[AVERAGESALEPRICE]
FROM PET..MERCHANDISE M INNER JOIN AVGSALEPRICE ASP
ON M.ITEMID = ASP.ITEMID INNER JOIN AVGCOSTPRICE CP
ON M.ITEMID = CP.ITEMID
WHERE AVERAGESALEPRICE > AVERAGECOSTPRICE*1.5

--3
CREATE VIEW EMPLOYEEMERCHSALES AS
SELECT EMPLOYEEID, (SUM(SAI.SALEPRICE*SAI.QUANTITY) / (SELECT SUM(SALEPRICE*QUANTITY) FROM PET..SALEITEM))*100 AS PERCENTAGE_OF_SALES
FROM PET..SALE S INNER JOIN PET..SALEITEM SAI ON S.SALEID = SAI.SALEID
GROUP BY EMPLOYEEID

CREATE VIEW TOTALSALESS AS
SELECT S.EMPLOYEEID, SUM(SAI.SALEPRICE*SAI.QUANTITY) AS TOTALEMPSALES
FROM PET..SALEITEM SAI INNER JOIN PET..SALE S ON SAI.SALEID = S.SALEID
GROUP BY EMPLOYEEID

SELECT DISTINCT ES.EMPLOYEEID, PERCENTAGE_OF_SALES, LASTNAME, TOTALEMPSALES
FROM PET..SALEITEM SAI, EMPLOYEEMERCHSALES ES INNER JOIN PET..EMPLOYEE EM ON ES.EMPLOYEEID = EM.EMPLOYEEID 
INNER JOIN TOTALSALESS TS ON TS.EMPLOYEEID = ES.EMPLOYEEID 
ORDER BY EMPLOYEEID

--4
SELECT TOP 1 S.SUPPLIERID, S.NAME, M.SHIPPINGCOST/SUM((O.QUANTITY*O.COST) + M.SHIPPINGCOST)*100 AS PCTSHIPPINGCOST
FROM PET..SUPPLIER S INNER JOIN PET..MERCHANDISEORDER M ON S.SUPPLIERID = M.SUPPLIERID
					INNER JOIN PET..ORDERITEM O ON M.PONUMBER=O.PONUMBER
GROUP BY S.SUPPLIERID, S.NAME, M.SHIPPINGCOST
ORDER BY PCTSHIPPINGCOST DESC

--5
CREATE VIEW TOTALANIMALSALESS AS
SELECT SUM(SA.SALEPRICE) AS 'TOTALANIMALSALES', S.CUSTOMERID
FROM PET..SALEANIMAL SA INNER JOIN PET..SALE S ON SA.SALEID = S.SALEID
GROUP BY CUSTOMERID

CREATE VIEW TOTALMERCHSALES AS
SELECT SUM(SI.QUANTITY*SI.SALEPRICE) AS 'TOTALMERCHSALES', S.CUSTOMERID
FROM PET..SALEITEM SI INNER JOIN PET..SALE S ON SI.SALEID = S.SALEID
GROUP BY CUSTOMERID

CREATE VIEW TOTALCUSTSALESSS AS 
SELECT TAS.CUSTOMERID, SUM(TAS.[TOTALANIMALSALES] + TMS.TOTALMERCHSALES) AS 'TOTALCUSTSALES'
FROM TOTALANIMALSALESS TAS INNER JOIN TOTALMERCHSALES TMS ON TAS.CUSTOMERID = TMS.CUSTOMERID
GROUP BY TAS.CUSTOMERID

SELECT TOP 1 TCSS.TOTALCUSTSALES, C.CUSTOMERID, C.LASTNAME, C.FIRSTNAME, TMS.TOTALMERCHSALES, TAS.TOTALANIMALSALES
FROM PET..CUSTOMER C INNER JOIN TOTALANIMALSALESS TAS ON C.CUSTOMERID = TAS.CUSTOMERID
INNER JOIN TOTALCUSTSALESSS TCSS ON TAS.CUSTOMERID = TCSS.CUSTOMERID INNER JOIN TOTALMERCHSALES TMS ON TAS.CUSTOMERID = TMS.CUSTOMERID

--6 
SELECT C.CUSTOMERID, C.LASTNAME, C.FIRSTNAME, SUM(SI.QUANTITY*SI.SALEPRICE) AS 'MAY TOTAL'
FROM PET..CUSTOMER C INNER JOIN PET..SALE S ON C.CUSTOMERID = S.CUSTOMERID
INNER JOIN PET..SALEITEM SI ON S.SALEID = SI.SALEID 
WHERE MONTH(S.SALEDATE) = 5 AND C.CUSTOMERID IN (SELECT S.CUSTOMERID FROM PET..SALE S INNER JOIN PET..SALEITEM SI ON S.SALEID = SI.SALEID
WHERE MONTH(S.SALEDATE) = 10
GROUP BY S.CUSTOMERID
HAVING (SUM(SI.QUANTITY*SI.SALEPRICE))>50) 
GROUP BY C.CUSTOMERID, C.LASTNAME, C.FIRSTNAME
HAVING (SUM(SI.QUANTITY*SI.SALEPRICE))>100

--7
CREATE VIEW MERCHPURCHASED AS
SELECT M.ITEMID, SUM(OI.QUANTITY) AS 'MERCHORDERED'
FROM PET..MERCHANDISEORDER MO INNER JOIN PET..ORDERITEM OI ON MO.PONUMBER = OI.PONUMBER INNER JOIN PET..MERCHANDISE M ON M.ITEMID =
 OI.ITEMID
WHERE MONTH(MO.ORDERDATE) BETWEEN 1 AND 6
GROUP BY M.ITEMID, M.DESCRIPTION
HAVING M.DESCRIPTION = 'DOG FOOD-CAN-PREMIUM'

CREATE VIEW MERCHSOLDD AS
SELECT M.ITEMID, M.DESCRIPTION, SUM(SI.QUANTITY) AS 'MERCHSOLD'
FROM PET..MERCHANDISE M INNER JOIN PET..SALEITEM SI ON M.ITEMID = SI.ITEMID INNER JOIN PET..SALE S ON SI.SALEID = S.SALEID
WHERE MONTH(S.SALEDATE) BETWEEN 1 AND 6
GROUP BY M.ITEMID, M.DESCRIPTION
HAVING M.DESCRIPTION = 'DOG FOOD-CAN-PREMIUM'

SELECT S.DESCRIPTION, P.ITEMID, S.[MERCHSOLD], P.[MERCHORDERED], (P.[MERCHORDERED] - S.[MERCHSOLD]) AS 'NETINCREASE'
FROM MERCHPURCHASED P INNER JOIN MERCHSOLDD S ON P.ITEMID = S.ITEMID

--8
SELECT M.ITEMID, M.DESCRIPTION, M.LISTPRICE
FROM PET..MERCHANDISE M INNER JOIN PET..SALEITEM SI ON M.ITEMID = SI.ITEMID INNER JOIN PET..SALE S ON SI.SALEID = S.SALEID
WHERE MONTH(S.SALEDATE) NOT IN (SELECT S.SALEDATE FROM PET..SALE S WHERE MONTH(S.SALEDATE) BETWEEN 1 AND 6 OR MONTH(S.SALEDATE) BETWEEN 8 AND 12)
GROUP BY M.ITEMID, M.DESCRIPTION, M.LISTPRICE
HAVING M.LISTPRICE > 50

--9
SELECT M.ITEMID, M.DESCRIPTION, M.QUANTITYONHAND, O.ITEMID
FROM PET..MERCHANDISE M LEFT OUTER JOIN PET..ORDERITEM O ON M.ITEMID = O.ITEMID
						LEFT OUTER JOIN PET..MERCHANDISEORDER MO ON O.PONUMBER = MO.PONUMBER
WHERE MO.PONUMBER IS NULL AND M.QUANTITYONHAND > 100

--10
SELECT M.ITEMID, M.DESCRIPTION, M.QUANTITYONHAND, O.ITEMID
FROM PET..MERCHANDISE M FULL OUTER JOIN PET..ORDERITEM O ON M.ITEMID = O.ITEMID
						FULL OUTER JOIN PET..MERCHANDISEORDER MO ON O.PONUMBER = MO.PONUMBER
WHERE M.QUANTITYONHAND>100 AND M.ITEMID NOT IN (SELECT O.ITEMID FROM PET..ORDERITEM O INNER JOIN PET..MERCHANDISEORDER M ON O.PONUMBER = M.PONUMBER
WHERE YEAR(M.ORDERDATE)=2004)

--11
CREATE TABLE TABLECATEGORY
(CATEGORY VARCHAR(10),
LOWEND INT,
HIGHEND INT)

INSERT INTO TABLECATEGORY
VALUES ('WEAK', 0, 200),
('GOOD', 201, 800),
('BEST',801,10000)

CREATE VIEW TOTNUM as
SELECT DISTINCT S.CUSTOMERID, S.SALEID, SA.SALEPRICE
FROM PET..SALE S INNER JOIN PET..SALEANIMAL SA ON S.SALEID=SA.SALEID
UNION 
SELECT DISTINCT S.CUSTOMERID, S.SALEID, (SELECT SUM(SALEPRICE*QUANTITY) FROM PET..SALEITEM WHERE SI.SALEID=SALEID) AS [SALE PRICE]
FROM PET..SALE S INNER JOIN PET..SALEITEM SI ON S.SALEID=SI.SALEID

SELECT DISTINCT S.CUSTOMERID, C.LASTNAME, C.FIRSTNAME, (SELECT SUM(SALEPRICE) FROM TOTNUM WHERE S.CUSTOMERID=CUSTOMERID) AS [GRAND TOTAL],
(SELECT CATEGORY FROM TABLECATEGORY WHERE (SELECT SUM(SALEPRICE) FROM TOTNUM WHERE S.CUSTOMERID=CUSTOMERID) >= LOWEND AND
(SELECT SUM(SALEPRICE) FROM TOTNUM WHERE S.CUSTOMERID=CUSTOMERID) < HIGHEND) AS [CATEGORY]

FROM TOTNUM S INNER JOIN PET..CUSTOMER C ON S.CUSTOMERID=C.CUSTOMERID

--12
SELECT S.NAME, 'ANIMALS' AS [ORDERTYPE]
FROM PET..SUPPLIER S INNER JOIN PET..ANIMALORDER A ON S.SUPPLIERID = A.SUPPLIERID
WHERE MONTH(A.ORDERDATE) = 6
UNION
SELECT S.NAME, 'MERCHANDISE' AS [ORDERTYPE]
FROM PET..SUPPLIER S INNER JOIN PET..MERCHANDISEORDER MO ON S.SUPPLIERID = MO.SUPPLIERID
WHERE MONTH(MO.ORDERDATE) = 6

--13
USE PET
DROP VIEW TOTNUM
DROP TABLE TABLECATEGORY
GO

--14
CREATE TABLE TABLECATEGORY
(CATEGORY VARCHAR(10),
LOWEND INT,
HIGHEND INT)

INSERT INTO TABLECATEGORY
VALUES ('WEAK', 0, 200)

--15
UPDATE TABLECATEGORY
SET HIGHEND = '400'
WHERE CATEGORY = 'WEAK'

SELECT *
FROM TABLECATEGORY

--17
DELETE FROM TABLECATEGORY
WHERE CATEGORY = 'WEAK'

--18
SELECT *
INTO COPYEMPLOYEE
FROM PET..EMPLOYEE

DELETE FROM COPYEMPLOYEE

INSERT INTO COPYEMPLOYEE
SELECT *
FROM PET..EMPLOYEE

SELECT *
FROM COPYEMPLOYEE
